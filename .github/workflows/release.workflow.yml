name: Release
run-name: release-workflow-runner

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
#    paths:
#      - '**/*.ts'
#      - '.github/workflows/release.yml'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    # Skip running release workflow on forks
#    if: github.repository_owner == 'patsevanton'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Create Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
            conventional-changelog-conventionalcommits@4.6.3
            conventional-changelog-eslint@3.0.9
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_SECRET }}

      # устанавливаем docker-compose
      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1

      # запускаем docker-compose файл, разворачиваем контейнеры в product mode
      - name: Deploy with Docker Compose
        run: |
          docker-compose -f devops/docker-compose-prod.yml --env-file env/.env.prod up -d

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          registry: docker.pkg.github.com
          name: docker.pkg.github.com/GRD-1/Nest-guide
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
#          tags: "production"

      # останавливаем докер контейнеры (иначе задача будет выполняться бесконечно)
      - name: stop docker containers and quit
        run: |
          docker stop $(docker ps -aq)

